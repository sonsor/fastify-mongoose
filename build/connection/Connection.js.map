{"version":3,"sources":["../../src/connection/Connection.js"],"names":["Connection","constructor","_protocol","_user","_password","_name","_hosts","_options","_mongoose","protocol","value","user","password","hosts","options","name","mongoose","toArray","url","push","toString","join","connect","connection"],"mappings":";;;;;;;AACA;;;AAGA,MAAMA,UAAN,CACA;AACIC,EAAAA,WAAW,GAAG;AACV,SAAKC,SAAL,GAAiB,IAAjB;AACA,SAAKC,KAAL,GAAa,IAAb;AACA,SAAKC,SAAL,GAAiB,IAAjB;AACA,SAAKC,KAAL,GAAa,IAAb;AAEA,SAAKC,MAAL,GAAc,IAAd;AACA,SAAKC,QAAL,GAAgB,IAAhB;AAEA,SAAKC,SAAL,GAAiB,IAAjB;AACH;AAED;;;;;;AAIA,MAAIC,QAAJ,GAAe;AACX,WAAO,KAAKP,SAAZ;AACH;AAED;;;;;;AAIA,MAAIO,QAAJ,CAAaC,KAAb,EAAoB;AAChB,SAAKR,SAAL,GAAiBQ,KAAjB;AACH;AAED;;;;;;AAIA,MAAIC,IAAJ,GAAW;AACP,WAAO,KAAKR,KAAZ;AACH;AAED;;;;;;AAIA,MAAIQ,IAAJ,CAASD,KAAT,EAAgB;AACZ,SAAKP,KAAL,GAAaO,KAAb;AACH;AAED;;;;;;AAIA,MAAIE,QAAJ,GAAe;AACX,WAAO,KAAKR,SAAZ;AACH;AAED;;;;;;AAIA,MAAIQ,QAAJ,CAAaF,KAAb,EAAoB;AAChB,SAAKN,SAAL,GAAiBM,KAAjB;AACH;AAED;;;;;;AAIA,MAAIG,KAAJ,GAAY;AACR,WAAO,KAAKP,MAAZ;AACH;AAED;;;;;;AAIA,MAAIO,KAAJ,CAAUH,KAAV,EAAiB;AACb,SAAKJ,MAAL,GAAcI,KAAd;AACH;AAED;;;;;;AAIA,MAAII,OAAJ,GAAc;AACV,WAAO,KAAKP,QAAZ;AACH;AAED;;;;;;AAIA,MAAIO,OAAJ,CAAYJ,KAAZ,EAAmB;AACf,SAAKH,QAAL,GAAgBG,KAAhB;AACH;AAED;;;;;;AAIA,MAAIK,IAAJ,GAAW;AACP,WAAO,KAAKV,KAAZ;AACH;AAED;;;;;;AAIA,MAAIU,IAAJ,CAASL,KAAT,EAAgB;AACZ,SAAKL,KAAL,GAAaK,KAAb;AACH;AAED;;;;;;AAIA,MAAIM,QAAJ,GAAe;AACX,WAAO,KAAKR,SAAZ;AACH;AAED;;;;;;AAIA,MAAIQ,QAAJ,CAAaN,KAAb,EAAoB;AAChB,SAAKF,SAAL,GAAiBE,KAAjB;AACH;;AAEDO,EAAAA,OAAO,GAAG;AACN,UAAMC,GAAG,GAAG,EAAZ;AACAA,IAAAA,GAAG,CAACC,IAAJ,CAAS,KAAKjB,SAAL,GAAiB,KAA1B;;AAEA,QAAI,KAAKC,KAAL,IAAc,KAAKC,SAAvB,EAAkC;AAC9Bc,MAAAA,GAAG,CAACC,IAAJ,CAAS,KAAKhB,KAAd;AACAe,MAAAA,GAAG,CAACC,IAAJ,CAAS,GAAT;AACAD,MAAAA,GAAG,CAACC,IAAJ,CAAS,KAAKf,SAAd;AACAc,MAAAA,GAAG,CAACC,IAAJ,CAAS,GAAT;AACH;;AAEDD,IAAAA,GAAG,CAACC,IAAJ,CAAS,KAAKb,MAAL,CAAYc,QAAZ,EAAT;AACAF,IAAAA,GAAG,CAACC,IAAJ,CAAS,GAAT;AACAD,IAAAA,GAAG,CAACC,IAAJ,CAAS,KAAKJ,IAAd;AAEA,WAAO,CACHG,GAAG,CAACG,IAAJ,CAAS,EAAT,CADG,EAEH,KAAKd,QAAL,CAAcU,OAAd,EAFG,CAAP;AAIH;AAED;;;;;;AAIA,QAAMK,OAAN,GAAgB;AACZ,UAAM,CAACJ,GAAD,EAAMJ,OAAN,IAAiB,KAAKG,OAAL,EAAvB;AACA,UAAM,KAAKT,SAAL,CAAec,OAAf,CAAuBJ,GAAvB,EAA4BJ,OAA5B,CAAN;AACA,WAAO,KAAKN,SAAL,CAAee,UAAtB;AACH;;AA1JL;;eA6JevB,U","sourcesContent":["\n/**\n *\n */\nclass Connection\n{\n    constructor() {\n        this._protocol = null;\n        this._user = null;\n        this._password = null;\n        this._name = null;\n\n        this._hosts = null;\n        this._options = null;\n\n        this._mongoose = null;\n    }\n\n    /**\n     *\n     * @return {null}\n     */\n    get protocol() {\n        return this._protocol;\n    }\n\n    /**\n     *\n     * @param value\n     */\n    set protocol(value) {\n        this._protocol = value;\n    }\n\n    /**\n     *\n     * @return {null}\n     */\n    get user() {\n        return this._user;\n    }\n\n    /**\n     *\n     * @param value\n     */\n    set user(value) {\n        this._user = value;\n    }\n\n    /**\n     *\n     * @return {null}\n     */\n    get password() {\n        return this._password;\n    }\n\n    /**\n     *\n     * @param value\n     */\n    set password(value) {\n        this._password = value;\n    }\n\n    /**\n     *\n     * @return {Array}\n     */\n    get hosts() {\n        return this._hosts;\n    }\n\n    /**\n     *\n     * @param value\n     */\n    set hosts(value) {\n        this._hosts = value;\n    }\n\n    /**\n     *\n     * @return {Array}\n     */\n    get options() {\n        return this._options;\n    }\n\n    /**\n     *\n     * @param value\n     */\n    set options(value) {\n        this._options = value;\n    }\n\n    /**\n     *\n     * @return {null}\n     */\n    get name() {\n        return this._name;\n    }\n\n    /**\n     *\n     * @param value\n     */\n    set name(value) {\n        this._name = value;\n    }\n\n    /**\n     *\n     * @return {mongoose}\n     */\n    get mongoose() {\n        return this._mongoose;\n    }\n\n    /**\n     *\n     * @param value\n     */\n    set mongoose(value) {\n        this._mongoose = value;\n    }\n\n    toArray() {\n        const url = [];\n        url.push(this._protocol + '://');\n\n        if (this._user && this._password) {\n            url.push(this._user);\n            url.push(':');\n            url.push(this._password);\n            url.push('@');\n        }\n\n        url.push(this._hosts.toString());\n        url.push('/');\n        url.push(this.name);\n\n        return [\n            url.join(''),\n            this._options.toArray(),\n        ];\n    }\n\n    /**\n     *\n     * @return {Promise<Connection>}\n     */\n    async connect() {\n        const [url, options] = this.toArray();\n        await this._mongoose.connect(url, options);\n        return this._mongoose.connection;\n    }\n}\n\nexport default Connection;\n"],"file":"Connection.js"}