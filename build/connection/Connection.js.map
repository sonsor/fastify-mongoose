{"version":3,"sources":["../../src/connection/Connection.js"],"names":["Connection","constructor","_protocol","_user","_password","_name","_hosts","_options","_mongoose","protocol","value","user","password","hosts","options","name","mongoose","toArray","url","push","toString","join","connect","connection"],"mappings":"mvLACA;;GAGA,KAAMA,CAAAA,UACN,CACIC,WAAW,EAAG,6CACV,KAAKC,SAAL,CAAiB,IADP,uBAEV,KAAKC,KAAL,CAAa,IAFH,uBAGV,KAAKC,SAAL,CAAiB,IAHP,uBAIV,KAAKC,KAAL,CAAa,IAJH,uBAMV,KAAKC,MAAL,CAAc,IANJ,uBAOV,KAAKC,QAAL,CAAgB,IAPN,uBASV,KAAKC,SAAL,CAAiB,IACpB,CAED;;;OAIA,GAAIC,CAAAA,QAAJ,EAAe,CACX,mDAAO,KAAKP,SACf,CAED;;;OAIA,GAAIO,CAAAA,QAAJ,CAAaC,CAAb,CAAoB,6CAChB,KAAKR,SAAL,CAAiBQ,CACpB,CAED;;;OAIA,GAAIC,CAAAA,IAAJ,EAAW,CACP,mDAAO,KAAKR,KACf,CAED;;;OAIA,GAAIQ,CAAAA,IAAJ,CAASD,CAAT,CAAgB,8CACZ,KAAKP,KAAL,CAAaO,CAChB,CAED;;;OAIA,GAAIE,CAAAA,QAAJ,EAAe,CACX,oDAAO,KAAKR,SACf,CAED;;;OAIA,GAAIQ,CAAAA,QAAJ,CAAaF,CAAb,CAAoB,8CAChB,KAAKN,SAAL,CAAiBM,CACpB,CAED;;;OAIA,GAAIG,CAAAA,KAAJ,EAAY,CACR,oDAAO,KAAKP,MACf,CAED;;;OAIA,GAAIO,CAAAA,KAAJ,CAAUH,CAAV,CAAiB,8CACb,KAAKJ,MAAL,CAAcI,CACjB,CAED;;;OAIA,GAAII,CAAAA,OAAJ,EAAc,CACV,oDAAO,KAAKP,QACf,CAED;;;OAIA,GAAIO,CAAAA,OAAJ,CAAYJ,CAAZ,CAAmB,+CACf,KAAKH,QAAL,CAAgBG,CACnB,CAED;;;OAIA,GAAIK,CAAAA,IAAJ,EAAW,CACP,qDAAO,KAAKV,KACf,CAED;;;OAIA,GAAIU,CAAAA,IAAJ,CAASL,CAAT,CAAgB,+CACZ,KAAKL,KAAL,CAAaK,CAChB,CAED;;;OAIA,GAAIM,CAAAA,QAAJ,EAAe,CACX,qDAAO,KAAKR,SACf,CAED;;;OAIA,GAAIQ,CAAAA,QAAJ,CAAaN,CAAb,CAAoB,+CAChB,KAAKF,SAAL,CAAiBE,CACpB,CAEDO,OAAO,EAAG,wBACN,KAAMC,CAAAA,CAAG,yBAAG,EAAH,CAAT,CAcA,8BAbAA,CAAG,CAACC,IAAJ,CAAS,KAAKV,QAAL,CAAgB,KAAzB,CAaA,wBAXI,+BAAKE,IAAL,6BAAa,KAAKC,QAAlB,CAWJ,kDAVIM,CAAG,CAACC,IAAJ,CAAS,KAAKR,IAAd,CAUJ,wBATIO,CAAG,CAACC,IAAJ,CAAS,GAAT,CASJ,wBARID,CAAG,CAACC,IAAJ,CAAS,KAAKP,QAAd,CAQJ,wBAPIM,CAAG,CAACC,IAAJ,CAAS,GAAT,CAOJ,kDAJAD,CAAG,CAACC,IAAJ,CAAS,KAAKN,KAAL,CAAWO,QAAX,EAAT,CAIA,wBAHAF,CAAG,CAACC,IAAJ,CAAS,GAAT,CAGA,wBAFAD,CAAG,CAACC,IAAJ,CAAS,KAAKJ,IAAd,CAEA,wBAAO,CACHG,CAAG,CAACG,IAAJ,CAAS,EAAT,CADG,CAEH,KAAKd,QAAL,CAAcU,OAAd,EAFG,CAIV,CAED;;;OAIA,KAAMK,CAAAA,OAAN,EAAgB,wBACZ,KAAM,CAACJ,CAAD,CAAMJ,CAAN,0BAAiB,KAAKG,OAAL,EAAjB,CAAN,CAEA,8BADA,KAAM,MAAKT,SAAL,CAAec,OAAf,CAAuBJ,CAAvB,CAA4BJ,CAA5B,CACN,wBAAO,KAAKN,SAAL,CAAee,UACzB,CA1JL,C,aA6JevB,U","sourcesContent":["\n/**\n *\n */\nclass Connection\n{\n    constructor() {\n        this._protocol = null;\n        this._user = null;\n        this._password = null;\n        this._name = null;\n\n        this._hosts = null;\n        this._options = null;\n\n        this._mongoose = null;\n    }\n\n    /**\n     *\n     * @return {null}\n     */\n    get protocol() {\n        return this._protocol;\n    }\n\n    /**\n     *\n     * @param value\n     */\n    set protocol(value) {\n        this._protocol = value;\n    }\n\n    /**\n     *\n     * @return {null}\n     */\n    get user() {\n        return this._user;\n    }\n\n    /**\n     *\n     * @param value\n     */\n    set user(value) {\n        this._user = value;\n    }\n\n    /**\n     *\n     * @return {null}\n     */\n    get password() {\n        return this._password;\n    }\n\n    /**\n     *\n     * @param value\n     */\n    set password(value) {\n        this._password = value;\n    }\n\n    /**\n     *\n     * @return {Array}\n     */\n    get hosts() {\n        return this._hosts;\n    }\n\n    /**\n     *\n     * @param value\n     */\n    set hosts(value) {\n        this._hosts = value;\n    }\n\n    /**\n     *\n     * @return {Array}\n     */\n    get options() {\n        return this._options;\n    }\n\n    /**\n     *\n     * @param value\n     */\n    set options(value) {\n        this._options = value;\n    }\n\n    /**\n     *\n     * @return {null}\n     */\n    get name() {\n        return this._name;\n    }\n\n    /**\n     *\n     * @param value\n     */\n    set name(value) {\n        this._name = value;\n    }\n\n    /**\n     *\n     * @return {mongoose}\n     */\n    get mongoose() {\n        return this._mongoose;\n    }\n\n    /**\n     *\n     * @param value\n     */\n    set mongoose(value) {\n        this._mongoose = value;\n    }\n\n    toArray() {\n        const url = [];\n        url.push(this.protocol + '://');\n\n        if (this.user && this.password) {\n            url.push(this.user);\n            url.push(':');\n            url.push(this.password);\n            url.push('@');\n        }\n\n        url.push(this.hosts.toString());\n        url.push('/');\n        url.push(this.name);\n\n        return [\n            url.join(''),\n            this._options.toArray(),\n        ];\n    }\n\n    /**\n     *\n     * @return {Promise<Connection>}\n     */\n    async connect() {\n        const [url, options] = this.toArray();\n        await this._mongoose.connect(url, options);\n        return this._mongoose.connection;\n    }\n}\n\nexport default Connection;\n"],"file":"Connection.js"}