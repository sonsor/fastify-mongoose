{"version":3,"sources":["../../src/connection/ConnectionFactory.js"],"names":["ConnectionFactory","create","hosts","Hosts","connection","Connection","protocol","options","OptionsFactory","mongoose"],"mappings":"mnDAKA,KAAMA,CAAAA,iBACN,CACI,MAAOC,CAAAA,MAAP,EAAgB,uBACZ;AADY,KAENC,CAAAA,CAAK,wBAAG,GAAIC,YAAP,CAFC,CAKNC,CAAU,wBAAG,GAAIC,oBAAP,CALJ,CAIZ;AAeA;AACA,6BAZAD,CAAU,CAACF,KAAX,CAAmBA,CAYnB,uBATAE,CAAU,CAACE,QAAX,CAAsB,SAStB,uBANAF,CAAU,CAACG,OAAX,CAAqBC,uBAAeP,MAAf,EAMrB,uBAHAG,CAAU,CAACK,QAAX,CAAsBA,iBAGtB,uBAAOL,CACV,CAtBL,C,aAyBeJ,iB","sourcesContent":["import Connection from './Connection';\nimport { Hosts } from '../host';\nimport { OptionsFactory } from '../option';\nimport mongoose from 'mongoose';\n\nclass ConnectionFactory\n{\n    static create() {\n        // creating Hosts class instance to meet dependency injection\n        const hosts = new Hosts();\n\n        // create instance of Connection class\n        const connection = new Connection();\n\n        // setting the hosts property\n        connection.hosts = hosts;\n\n        // setting up the default protocol\n        connection.protocol = 'mongodb';\n\n        // setting up options property\n        connection.options = OptionsFactory.create();\n\n        // setting the mongose object\n        connection.mongoose = mongoose;\n\n        // return the connection instance\n        return connection;\n    }\n}\n\nexport default ConnectionFactory;\n"],"file":"ConnectionFactory.js"}