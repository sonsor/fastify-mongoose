{"version":3,"sources":["../src/connect.js"],"names":["connect","fastify","config","next","user","password","name","hosts","options","connection","ConnectionFactory","create","Error","host","port","add","Host","key","value","Object","entries","set","then","conn","decorate","catch","err"],"mappings":"izFAIA,KAAMA,CAAAA,OAAO,CAAG,CAACC,CAAD,CAAUC,CAAV,CAAkBC,CAAlB,GAA2B,sBAEvC;AAFuC,KAGjC,CACFC,IAAI,CAAJA,CADE,CAEFC,QAAQ,CAARA,CAFE,CAGFC,IAAI,CAAJA,CAHE,CAIFC,KAAK,CAALA,CAJE,CAKFC,OAAO,CAAPA,CALE,wBAMFN,CANE,CAHiC,CAYjCO,CAAU,uBAAGC,8BAAkBC,MAAlB,EAAH,CAZuB,CAWvC;AASA;AACA,wBANAF,CAAU,CAACL,IAAX,CAAkBA,CAMlB,sBAHAK,CAAU,CAACJ,QAAX,CAAsBA,CAGtB,sBAAI,CAACC,CAAL,CAEI,oDADAH,CAAI,CAAC,GAAIS,CAAAA,KAAJ,CAAU,+BAAV,CAAD,CACJ,yBAKJ;AACA,gDAHAH,CAAU,CAACH,IAAX,CAAkBA,CAGlB,sBAAI,CAACC,CAAL,CAEI,qDADAJ,CAAI,CAAC,GAAIS,CAAAA,KAAJ,CAAU,2CAAV,CAAD,CACJ,0BA/BmC,8CAkCvC,IAAK,KAAM,CAAEC,IAAI,CAAJA,CAAF,CAAQC,IAAI,CAAJA,CAAR,CAAX,EAA4B,qBAAQP,CAAR,CAA5B,uBACIE,CAAU,CAACF,KAAX,CAAiBQ,GAAjB,CAAqB,GAAIC,WAAJ,CAASH,CAAT,CAAeC,CAAf,CAArB,CADJ,CAIA;AAtCuC,sBAuCvC,IAAK,KAAM,CAACG,CAAD,CAAMC,CAAN,CAAX,EAA2BC,CAAAA,MAAM,CAACC,OAAP,CAAeZ,CAAf,CAA3B,uBACIC,CAAU,CAACD,OAAX,CAAmBa,GAAnB,CAAuBJ,CAAvB,CAA4BC,CAA5B,CADJ,CAIA;AA3CuC,sBA4CvCT,CAAU,CACLT,OADL,GAEKsB,IAFL,CAEWC,CAAD,EAAU,4CACZtB,CAAO,CAACuB,QAAR,CAAiB,IAAjB,CAAuBD,CAAvB,CADY,uBAEZpB,CAAI,CAAC,IAAD,CAAOoB,CAAP,CACP,CALL,EAMKE,KANL,CAMWC,CAAG,8CAAIvB,CAAI,CAACuB,CAAD,CAAR,CANd,CAOH,CAnDD,C,aAqDe1B,O","sourcesContent":["import { ConnectionFactory } from './connection';\nimport { Host } from './host';\nimport { toArray } from './helpers';\n\nconst connect = (fastify, config, next) => {\n\n    // extract configs\n    const {\n        user,\n        password,\n        name,\n        hosts,\n        options\n    } = config;\n\n    // create the connection instance\n    const connection = ConnectionFactory.create();\n\n    // set the credentials of the connection\n    connection.user = user;\n\n    // set user for the connection\n    connection.password = password;\n\n    // set db name for the connection\n    if (!name) {\n        next(new Error('should provide database name.'));\n        return false;\n    }\n\n    connection.name = name;\n\n    // add all the hostss\n    if (!hosts) {\n        next(new Error('should provide at lease one host details.'));\n        return false;\n    }\n\n    for (const { host, port} of toArray(hosts)) {\n        connection.hosts.add(new Host(host, port));\n    }\n\n    // set all options\n    for (const [key, value] of Object.entries(options)) {\n        connection.options.set(key, value);\n    }\n\n    // establish the connection\n    connection\n        .connect()\n        .then((conn) => {\n            fastify.decorate('db', conn);\n            next(null, conn);\n        })\n        .catch(err => next(err))\n}\n\nexport default connect;\n"],"file":"connect.js"}